// <auto-generated />
using LibraryOrganizer.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LibraryOrganizer.Migrations
{
    [DbContext(typeof(LibraryContext))]
    [Migration("20221202164830_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("LibraryOrganizer.Models.Author", b =>
                {
                    b.Property<int>("AuthorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("AuthorId");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            AuthorId = 1,
                            FirstName = "Anne",
                            LastName = "Sullivan"
                        },
                        new
                        {
                            AuthorId = 2,
                            FirstName = "Maria",
                            LastName = "Montessori"
                        },
                        new
                        {
                            AuthorId = 3,
                            FirstName = "Martin Luther",
                            LastName = "King"
                        },
                        new
                        {
                            AuthorId = 4,
                            FirstName = "",
                            LastName = "Aristotle"
                        },
                        new
                        {
                            AuthorId = 5,
                            FirstName = "Jaime",
                            LastName = "Escalante"
                        });
                });

            modelBuilder.Entity("LibraryOrganizer.Models.Title", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<string>("BookTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsRead")
                        .HasColumnType("bit");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<string>("Review")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("Titles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorId = 1,
                            BookTitle = "Sign Language",
                            IsRead = false,
                            Rating = 0
                        },
                        new
                        {
                            Id = 2,
                            AuthorId = 1,
                            BookTitle = "Sign Language",
                            IsRead = false,
                            Rating = 0
                        },
                        new
                        {
                            Id = 3,
                            AuthorId = 4,
                            BookTitle = "Logic",
                            IsRead = false,
                            Rating = 0
                        },
                        new
                        {
                            Id = 4,
                            AuthorId = 4,
                            BookTitle = "Logic",
                            IsRead = false,
                            Rating = 0
                        },
                        new
                        {
                            Id = 5,
                            AuthorId = 2,
                            BookTitle = "Early Childhood Education",
                            IsRead = false,
                            Rating = 0
                        },
                        new
                        {
                            Id = 6,
                            AuthorId = 2,
                            BookTitle = "Early Childhood Education",
                            IsRead = false,
                            Rating = 0
                        },
                        new
                        {
                            Id = 7,
                            AuthorId = 5,
                            BookTitle = "Calculus",
                            IsRead = false,
                            Rating = 0
                        },
                        new
                        {
                            Id = 8,
                            AuthorId = 5,
                            BookTitle = "Calculus",
                            IsRead = false,
                            Rating = 0
                        },
                        new
                        {
                            Id = 9,
                            AuthorId = 3,
                            BookTitle = "Nonviolence and Social Change",
                            IsRead = false,
                            Rating = 0
                        },
                        new
                        {
                            Id = 10,
                            AuthorId = 3,
                            BookTitle = "Nonviolence and Social Change",
                            IsRead = false,
                            Rating = 0
                        });
                });

            modelBuilder.Entity("LibraryOrganizer.Models.Title", b =>
                {
                    b.HasOne("LibraryOrganizer.Models.Author", "Author")
                        .WithMany("Titles")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
